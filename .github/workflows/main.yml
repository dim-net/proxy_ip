name: Update and Test Proxies

on:
  workflow_dispatch: # Mengizinkan eksekusi manual
  schedule:
    - cron: '0 */6 * * *' # Jalankan setiap 6 jam

jobs:
  update-proxies:
    runs-on: ubuntu-latest
    timeout-minutes: 20 # Tingkatkan timeout jika daftar proxy sangat banyak

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22' # Gunakan versi Go terbaru

      - name: Cache goping executable
        id: cache-goping
        uses: actions/cache@v4
        with:
          path: ~/.local/bin/goping # Lokasi executable goping
          key: ${{ runner.os }}-goping-v1 # Kunci cache

      - name: Download and build goping if not cached
        if: steps.cache-goping.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.local/bin
          go install github.com/schollz/goping@latest
          mv ~/go/bin/goping ~/.local/bin/goping # Pindahkan ke lokasi yang di-cache
          echo "goping downloaded and built."

      - name: Ensure goping is in PATH
        run: echo "~/.local/bin" >> $GITHUB_PATH # Tambahkan ke PATH agar bisa dipanggil langsung

      - name: Define proxy sources
        id: proxy_sources
        run: |
          # Anda bisa menambahkan lebih banyak URL di sini, pisahkan dengan spasi
          echo "PROXY_URLS=https://raw.githubusercontent.com/gopaybis/Proxylist/refs/heads/main/totalproxylist2.txt https://raw.githubusercontent.com/h58fmb0344g9h3/p57gdv3j3n0vg334/refs/heads/main/f74bjd2h2ko99f3j5" >> "$GITHUB_ENV"

      - name: Fetch and combine proxies
        run: |
          TEMP_FILE="all_proxies_raw.txt"
          :> "$TEMP_FILE" # Buat file kosong

          for url in ${{ env.PROXY_URLS }}; do
            echo "Fetching from: $url"
            curl -s "$url" >> "$TEMP_FILE"
            echo "" >> "$TEMP_FILE" # Tambahkan baris baru untuk pemisah
          done

          # Hapus baris kosong dan trim spasi
          sed -i '/^$/d' "$TEMP_FILE"
          sed -i 's/^[[:space:]]*//;s/[[:space:]]*$//' "$TEMP_FILE"

          # Ekstrak hanya IP:Port, hapus duplikat, dan simpan ke file baru
          awk -F',' '{print $1":"$2}' "$TEMP_FILE" | sort -u > "proxies_for_ping.txt"

          echo "Combined unique IP:Port for ping test:"
          cat "proxies_for_ping.txt"
          echo "Total unique IP:Port entries: $(wc -l < proxies_for_ping.txt)"

      - name: Test proxy connections (TCP Ping with goping)
        id: tcp_ping_test
        run: |
          if [ ! -s "proxies_for_ping.txt" ]; then
            echo "No proxies to test in proxies_for_ping.txt. Exiting gracefully."
            touch reachable_proxies.txt # Pastikan file output ada, meskipun kosong
            exit 0
          fi
          
          # Gunakan goping untuk menguji koneksi TCP secara paralel
          # -p 50: 50 goroutine paralel
          # -t 5s: 5 detik timeout per koneksi
          # -o: output hanya IP:Port yang sukses
          # -f: baca dari file
          goping -p 50 -t 2s -o -f proxies_for_ping.txt > reachable_proxies.txt || true # '|| true' agar tidak gagal jika ada error non-fatal

          echo "Reachable IP:Port proxies:"
          cat reachable_proxies.txt
          echo "Total reachable IP:Port entries: $(wc -l < reachable_proxies.txt)"

      - name: Filter original proxy data based on reachable IP:Port
        run: |
          ORIGINAL_PROXIES_FILE="all_proxies_raw.txt" # File dengan data proxy lengkap (IP,Port,Country,Org)
          REACHABLE_IPS_FILE="reachable_proxies.txt" # Output dari goping (IP:Port)
          FINAL_PROXY_FILE="proxy.txt" # File output akhir

          :> "$FINAL_PROXY_FILE" # Buat file kosong

          # Baca IP:Port yang dapat dijangkau dan cari baris lengkapnya dari data mentah
          # Menggunakan grep -Ff agar lebih efisien untuk banyak pola
          grep -Ff <(sed 's/$/\,/' "$REACHABLE_IPS_FILE") "$ORIGINAL_PROXIES_FILE" | sort -u > "$FINAL_PROXY_FILE"

          echo "Final proxy.txt content (reachable proxies with full details):"
          cat "$FINAL_PROXY_FILE"
          echo "Total reachable proxies: $(wc -l < "$FINAL_PROXY_FILE")"

      - name: Commit and push if changes exist
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add proxy.txt
          git diff --quiet --cached || git commit -m "Update proxy list with reachable proxies via TCP ping"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
